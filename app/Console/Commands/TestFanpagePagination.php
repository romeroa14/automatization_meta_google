<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use App\Services\CampaignCreationFlowService;

class TestFanpagePagination extends Command
{
    protected $signature = 'telegram:test-fanpage-pagination';
    protected $description = 'Prueba la paginaciÃ³n de fanpages';

    public function handle()
    {
        $this->info("ðŸ§ª **PRUEBA DE PAGINACIÃ“N DE FANPAGES**");
        $this->newLine();

        $flowService = new CampaignCreationFlowService();

        // Probar pÃ¡gina 1
        $this->info("ðŸ“„ **PÃ¡gina 1:**");
        $this->line("=" . str_repeat("=", 20));
        $message1 = $flowService->getFanpageMessagePaginated(1);
        $this->line($message1);
        $this->newLine();

        // Probar pÃ¡gina 2
        $this->info("ðŸ“„ **PÃ¡gina 2:**");
        $this->line("=" . str_repeat("=", 20));
        $message2 = $flowService->getFanpageMessagePaginated(2);
        $this->line($message2);
        $this->newLine();

        // Probar pÃ¡gina 3
        $this->info("ðŸ“„ **PÃ¡gina 3:**");
        $this->line("=" . str_repeat("=", 20));
        $message3 = $flowService->getFanpageMessagePaginated(3);
        $this->line($message3);
        $this->newLine();

        // Mostrar informaciÃ³n de paginaciÃ³n
        $pagination = $flowService->getFanpagesPaginated(1);
        $this->info("ðŸ“Š **InformaciÃ³n de PaginaciÃ³n:**");
        $this->line("â€¢ Total de fanpages: {$pagination['total']}");
        $this->line("â€¢ Fanpages por pÃ¡gina: {$pagination['per_page']}");
        $this->line("â€¢ Total de pÃ¡ginas: {$pagination['total_pages']}");
        $this->line("â€¢ PÃ¡gina actual: {$pagination['current_page']}");

        $this->newLine();
        $this->info("ðŸŽ‰ **PRUEBA COMPLETADA**");
        $this->info("âœ… La paginaciÃ³n estÃ¡ funcionando correctamente");
        $this->info("âœ… Cada pÃ¡gina muestra mÃ¡ximo 20 fanpages");
        $this->info("âœ… Los usuarios pueden navegar con 'SIGUIENTE' y 'ANTERIOR'");

        return Command::SUCCESS;
    }
}
